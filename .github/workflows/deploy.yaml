name: "DEPLOY:INFRASTRUCTURE"

on:
  workflow_dispatch:
    inputs:
      region:
        description: 'Select region'
        required: true
        type: choice
        options:
          - us-east-1
          - us-west-2
          - eu-west-1
          - eu-west-1
          - ap-southeast-1
          - ap-southeast-2
      environment:
        description: 'Select environment'
        required: true
        type: choice
        options:
          - dev
          - qa
          - prod
      eks_cluster_name:
        description: 'EKS Cluster Name'
        required: true
        type: choice
        options:
          - 'dev-eks-cluster'
      instance_type:
        description: 'EKS Cluster Name'
        required: true
        type: choice
        options:
          - 'm5.large'
      number_of_nodes:
        description: 'Desired number of worker nodes'
        required: true
        default: '1'
      min_number_of_nodes:
        description: 'Minimum number of worker nodes'
        required: true
        default: '1'
      max_number_of_nodes:
        description: 'Maximum number of worker nodes'
        required: true
        default: '10'
      vpc_cidr_block:
        description: 'The VPC Cidr block'
        required: true
        default: '10.0.0.0/16'
      terraform_xargs:
        description: 'additional terraform arguments. ex. -lock=false'
        required: true
        default: ''
      terraform_application:
        description: 'Which infrastructure piece of terraform do you want to deploy.'
        required: true
        type: choice
        options:
          - eks
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      TF_VAR_environment: '${{ inputs.environment }}'
      TF_VAR_region: '${{ inputs.region }}'
      TF_VAR_vpc_cidr_block: '${{ inputs.vpc_cidr_block }}'
      TF_VAR_eks_cluster_name: '${{ inputs.eks_cluster_name }}'
      TF_VAR_instance_type: '${{ inputs.instance_type }}'
      TF_VAR_number_of_nodes: '${{ inputs.number_of_nodes }}'
      TF_VAR_max_number_of_nodes: '${{ inputs.max_number_of_nodes }}'
      TF_VAR_min_number_of_nodes: '${{ inputs.min_number_of_nodes }}'
      TF_WORKING_DIR: "terraform/${{ inputs.terraform_application }}"
      PROJECT_NAME: "dupulo-cloud-interview"

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v3

      - name: "Configure AWS credentials for ${{ env.TF_VAR_environment }} environment"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets['AWS_ACCESS_KEY_ID_' + env.ENVIRONMENT | upper] }}
          aws-secret-access-key: ${{ secrets['AWS_SECRET_ACCESS_KEY_' + env.ENVIRONMENT | upper] }}
          aws-region: ${{ env.TF_VAR_region }}

      - name: "Install Terraform"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.3

      - name: "Install AWS CLI"
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli

      - name: "Replace variables in providers.tf"
        run: |
          sed -i "s|bucket *= *\"[^\"]*\"|bucket = \"${{ env.PROJECT_NAME }}-${{ env.TF_VAR_environment }}\"|" ${{ env.TF_WORKING_DIR }}/providers.tf
          sed -i "s|key *= *\"[^\"]*\"|key = \"${{ env.TF_VAR_environment }}/terraform.tfstate\"|" ${{ env.TF_WORKING_DIR }}/providers.tf
          sed -i "s|region *= *\"[^\"]*\"|region = \"${{ env.TF_VAR_region }}\"|" ${{ env.TF_WORKING_DIR }}/providers.tf
          sed -i "s|dynamodb_table *= *\"[^\"]*\"|dynamodb_table = \"${{ env.PROJECT_NAME }}-${{ env.TF_VAR_environment }}\"|" ${{ env.TF_WORKING_DIR }}/providers.tf

      - name: "Initialize Terraform"
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: "Terraform Plan"
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -out=tfplan

      - name: "Terraform Apply"
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform apply -auto-approve tfplan ${{ inputs.terraform_xargs }}
